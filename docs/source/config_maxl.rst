.. _maxl_planner:

=======================================================
Config : Controller - MaxL
=======================================================

Overview
--------
MaxL Planner is a package that is used to drive the robot. It issues the linear and angular velocity commands that are needed to reach the goal. 

Robot Parameter Description
---------------------------

1. Robot Configuration Parameters
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

+------------------------+------------+--------------------------------------------------------------------------------------+
| Parameter              | Units      | Description                                                                          |
+========================+============+======================================================================================+
| maxSpeed               | S.I        | Maximum possible linear velocity                                                     |
+------------------------+------------+--------------------------------------------------------------------------------------+
| maxAccel               | S.I        | Maximum possible linear acceleration                                                 |
+------------------------+------------+--------------------------------------------------------------------------------------+
| use_laser              | true/false | If true, the robot uses the rpLidar Sensor otherwise uses velodyn Sensor for planning|
+------------------------+------------+--------------------------------------------------------------------------------------+
| odomTopic              | String     | The topic name which publishes the odometry                                          |
+------------------------+------------+--------------------------------------------------------------------------------------+
| velodyneTopic          | String     | The topic name which publishes the velodyn sensor data                               |
+------------------------+------------+--------------------------------------------------------------------------------------+
| scanTopic              | String     | The topic name which publishes the rpLidar sensor data                               |
+------------------------+------------+--------------------------------------------------------------------------------------+
| pathFolder             | File path  | The relative path to the path folder                                                 |
+------------------------+------------+--------------------------------------------------------------------------------------+
| pathFile               | String     | The name of the path                                                                 |
+------------------------+------------+--------------------------------------------------------------------------------------+
| autonomyMode           | true/false | If true, calculates the relative goal for the robot to follow                        | 
+------------------------+------------+--------------------------------------------------------------------------------------+
| map_frame              | String     | Name of the map frame                                                                |
+------------------------+------------+--------------------------------------------------------------------------------------+
| robot_frame            | String     | Name of the robot base frame                                                         |
+------------------------+------------+--------------------------------------------------------------------------------------+
| velodyne_frame         | String     | Name of the velodyn Sensor frame                            	                     |
+------------------------+------------+--------------------------------------------------------------------------------------+
| laser_frame            | String     | Name of the rpLidar Sensor frame                                                     |
+------------------------+------------+--------------------------------------------------------------------------------------+

2. Robot Footprint
^^^^^^^^^^^^^^^^^^
+------------------------+--------------------------+--------------------------------------------------------------------------------------+
| Parameter              | Units                    | Description                                                                          |
+========================+==========================+======================================================================================+
| vehicleLength          | (Numeric) eg. 0.98       | Length of the vehicle                                                                |
+------------------------+--------------------------+--------------------------------------------------------------------------------------+
| vehicleWidth           | (Numeric) eg. 0.65       | Width of the vehicle                                                                 |
+------------------------+--------------------------+--------------------------------------------------------------------------------------+

3. Lookahead Parameters
^^^^^^^^^^^^^^^^^^^^^^^
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| Parameter                           | Units                  | Description                                                                |
+=====================================+========================+============================================================================+
| min_lookahead                       | (Numeric) eg.0.2       | The minimum lookahead on the global path for the robot                     |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| max_lookahead                       | (Numeric) eg. 0.65     | The minimum lookahead on the global path for the robot                     |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| closest_point_index_search          | (Numeric) eg. 10       | search for closest point index within this range of previous closest point |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| min_radius                          | (Numeric) eg. 0.1      | minimum radius the robot can take from current to goal pose                |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| max_radius                          | (Numeric) eg. 1.0      | maximum radius the robot can take from current to goal pose                |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| max_omega_radius                    | (Numeric) eg. 1.0      | radius set when condition for straight line is satisfied                   |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| max_y_deviation                     | (Numeric) eg. 0.5      | Maximum deviation in the lateral direction                                 |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| lookahead_point_distance            | (Numeric) eg. 0.1      | used to find the point in the global path to follow                        |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+

4. MaxL Parameters
^^^^^^^^^^^^^^^^^^^^^^^
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| Parameter                           | Units                  | Description                                                                |
+=====================================+========================+============================================================================+
| yaw_gain                            | (Numeric) eg.2.5       | Yaw gain used when robot is in motion                                      |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| stop_yaw_gain                       | (Numeric) eg. 0.6      | Yaw gain used when robot is stopped/almost stopped                         |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| max_yaw_rate                        | (Numeric) eg. 0.5      | Maximum yaw rate for the robot                                             |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| direction_threshold                 | (Numeric) eg. 120      | Direction threshold( in degrees) on either side of robot wrt relative goal |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| high_accuracy_multiplier            | (Numeric) eg. 0.4      | High accuracy multiplier for reaching the goal (0,1]                       |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| in_place_rotation_penalty           | (Numeric) eg. 0.05     | Scoring parameter. Higher value penalises in place rotation more           |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| goal_direction_preference           | (Numeric) eg. 0.2      | Scoring parameter. Higher value means controller prefers paths             |
|                                     |                        | oriented towards the goal.                                                 |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| x_inflate                           | (Numeric) eg. 0.16     | Obstacle Inflation in the x direction                                      |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| y_inflate                           | (Numeric) eg. 0.80     | Obstacle Inflation in the y direction                                      |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| vis_pointcloud                      | true/false             | Parameter to enable visualisation of detailed data (pointcloud data)       |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| obstacle_horizon                    | (Numeric) eg. 3.5      | Parameter used for cropping the pointcloud                                 |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| min_path_range                      | (Numeric) eg. 1.0      | Minimum path range for finding the path                                    |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| initial_path_scale                  | (Numeric) eg. 1.0      | Initial path scale value. Path Scales scale the paths and distances.       |
|                                     |                        | Low pathScale means path elongation and vice-versa.                        |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| min_path_scale                      | (Numeric) eg. 0.75     | Minimum path scale value. For particular local goal, pathScale starts	    |
|                                     |                        | with initial value, finds a path, then value of path scale is decreased    |
|                                     |                        | to find a longer solution path, till it hits the minPathScale.             |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| path_scale_step                     | (Numeric) eg. 0.25     | Path Scale step value                                                      |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+
| use_odom_velocity                   | true/false             | Parameter to take velocity from odom messages                              |
+-------------------------------------+------------------------+----------------------------------------------------------------------------+

